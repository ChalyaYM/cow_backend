basePath: /api
definitions:
  analitics.byDistrictStatistics:
    properties:
      alive:
        type: integer
      districtID:
        type: integer
      genotyped:
        type: integer
      ill:
        type: integer
    type: object
  analitics.byHoldStatistics:
    properties:
      alive:
        type: integer
      genotyped:
        type: integer
      holdID:
        type: integer
      ill:
        type: integer
    type: object
  analitics.byHozStatistics:
    properties:
      alive:
        type: integer
      genotyped:
        type: integer
      ill:
        type: integer
    type: object
  analitics.byRegionStatistics:
    properties:
      alive:
        type: integer
      genotyped:
        type: integer
      ill:
        type: integer
      regionID:
        type: integer
    type: object
  auth.AuthData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.RegisterData:
    properties:
      email:
        type: string
      farm:
        type: integer
      fullname:
        type: string
      password:
        type: string
      phone:
        type: string
      region:
        type: integer
      role:
        type: integer
    type: object
  cows.FilterSerializedCow:
    properties:
      approved:
        example: true
        type: boolean
      birkingDate:
        $ref: '#/definitions/models.DateOnly'
      birthDate:
        $ref: '#/definitions/models.DateOnly'
      breedName:
        example: Какая-нибудь порода
        type: string
      calvingDate:
        items:
          $ref: '#/definitions/models.DateOnly'
        type: array
      checkMilkDate:
        items:
          $ref: '#/definitions/models.DateOnly'
        type: array
      createdAt:
        $ref: '#/definitions/models.DateOnly'
      deathDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: RegionId                  *uint                       `json:",omitempty"
          validate:"optional"`
      departDate:
        $ref: '#/definitions/models.DateOnly'
      events:
        items:
          $ref: '#/definitions/models.Event'
        type: array
      exteriorRating:
        type: number
      farmGroupName:
        example: ООО Аурус
        type: string
      genotyped:
        example: true
        type: boolean
      genotypingDate:
        $ref: '#/definitions/models.DateOnly'
      hozName:
        type: string
      id:
        example: 123
        type: integer
      inbrindingCoeffByFamily:
        example: 3.14
        type: number
      inbrindingCoeffByGenotype:
        example: 3.14
        type: number
      insemenationDate:
        items:
          $ref: '#/definitions/models.DateOnly'
        type: array
      inventoryNumber:
        example: "321"
        type: string
      isAborted:
        type: boolean
      isDead:
        type: boolean
      isGenotyped:
        type: boolean
      isStillBorn:
        type: boolean
      isTwins:
        type: boolean
      monogeneticIllneses:
        items:
          $ref: '#/definitions/models.GeneticIllnessData'
        type: array
      name:
        example: Буренка
        type: string
      rshnnumber:
        example: "123"
        type: string
      sexName:
        type: string
    required:
    - approved
    - birthDate
    - farmGroupName
    - genotyped
    - id
    - inventoryNumber
    - name
    - rshnnumber
    type: object
  cows.ReserealizedCow:
    properties:
      approved:
        description: Целое число, 0 - корова не подтверждена, 1 - корова подтверждена,
          -1 - корова отклонена
        example: 1
        type: integer
      birkingDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата перебирковки
      birthDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: День рождения
      birthHozId:
        description: ID хозяйства рождения
        type: integer
      birthMethod:
        description: 'способ зачатия: клон, эмбрион, искусственное осеменени, естественное
          осеменение'
        type: string
      breedId:
        description: ID породы коровы
        example: 1
        type: integer
      breedName:
        description: порода, null если нет
        type: string
      createdAt:
        description: Время создания коровы в базе данных
        example: "2007-01-01"
        type: string
      deathDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата смерти
      departDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: День отбытия из коровника
      exterior:
        $ref: '#/definitions/models.Exterior'
      farmGroupId:
        description: ID хозяйства, которому корова принадлежит
        example: 1
        type: integer
      farmID:
        description: ID фермы, которой корова принадлежит
        example: 1
        type: integer
      farmName:
        description: ферма на которой живет, null если нет
        type: string
      father:
        $ref: '#/definitions/models.Cow'
      fatherSelecs:
        description: ID коровы отца коровы
        type: integer
      genetic:
        $ref: '#/definitions/models.Genetic'
      gradeHozId:
        description: оценка по хозяйству
        example: 1
        type: integer
      gradeRegionId:
        description: оценка по региону
        example: 1
        type: integer
      holding:
        $ref: '#/definitions/models.Farm'
      holdingID:
        description: ID холдинга, которому принадлежит корова
        type: integer
      hozHame:
        description: хозяйство на котором живет, null, если нет
        type: string
      id:
        description: ID коровы
        example: 1
        type: integer
      identificationNumber:
        description: он все-таки есть! это какой-то не российский номер коровы
        type: string
      inbrindingCoeffByFamily:
        description: Exterior                float64  `example:"3.14"` // Оценка экстерьера
          коровы, будет переделано в ID экстерьера коровы
        example: 3.14
        type: number
      inventoryNumber:
        description: Инвентарный номер коровы
        example: "1213321"
        type: string
      mother:
        $ref: '#/definitions/models.Cow'
      motherSelecs:
        description: ID коровы матери коровы
        type: integer
      name:
        description: Кличка коровы
        example: Дима
        type: string
      previousHozId:
        description: ID предыдущего хозяйства, когда корову продают, она переходит
          к новому владельцу и становится "новой коровой"
        type: integer
      rshnnumber:
        description: РСХН номер коровы
        example: "1323323232"
        type: string
      selecsNumber:
        description: Селекс номер коровы
        example: 98989
        type: integer
      sexId:
        description: ID пола коровы
        example: 1
        type: integer
      sexName:
        description: пол, null если нет
        type: string
    type: object
  cows_filter.CowsFilter:
    properties:
      birkingDateFrom:
        description: Фильтр по дате перебирковки коровы, ищет коров у которых быа
          перебирковка в эту дату или позднее
        example: "1800-01-21"
        type: string
      birkingDateTo:
        description: Фильтр по дате осеменения коровы, ищет коров у которых была перебирковка
          в эту дату или позднее
        example: "2800-01-21"
        type: string
      birthDateFrom:
        description: RegionId               *uint   `example:"1" validate:"optional"`          //ID
          региона, для которого ищутся коровы
        example: "1800-01-21"
        type: string
      birthDateTo:
        description: Фильтр по дню рождения коровы ОТ (возращает всех кто родился
          в эту дату или раньше)
        example: "2800-01-21"
        type: string
      breedId:
        description: Фильтр по ID пород несколько ID пород - возращает всех коров,
          ID пород которых в списке
        items:
          type: integer
        type: array
      calvingDateFrom:
        description: Фильтр по дате отела коровы, ищет коров у которых был отел в
          эту дату или позднее
        example: "1800-01-21"
        type: string
      calvingDateTo:
        description: Фильтр по дате осеменения коровы, ищет коров у которых был отел
          в эту дату или позднее
        example: "2800-01-21"
        type: string
      controlMilkingDateFrom:
        description: Фильтр по дате контрольной дойки, ищет коров у которых была контрольная
          дойка в эту дату или позднее
        example: "1800-01-21"
        type: string
      controlMilkingDateTo:
        description: Фильтр по дате контрольной дойки, ищет коров у которых была контрольная
          дойка в эту дату или ранее
        example: "2800-01-21"
        type: string
      createdAtFrom:
        type: string
      createdAtTo:
        type: string
      departDateFrom:
        description: Фильтр по дате открепления коровы ищет всех коров открепленных
          от коровника в эту дату или позднее
        example: "1800-01-21"
        type: string
      departDateTo:
        description: Фильтр по дате открепления коровы ищет всех коров открепленных
          от коровника в эту дату или раньше
        example: "2800-01-21"
        type: string
      entitiesOnPage:
        default: 50
        description: Количество сущностей на странице
        type: integer
      exteriorFrom:
        default: 3.14
        description: Фильтр по оценке экстерьера коровы ОТ
        type: number
      exteriorTo:
        default: 3.14
        description: Фильтр по оценке экстерьера коровы ДО
        type: number
      genotypingDateFrom:
        description: фильтр по дате генотипирования ОТ
        example: "1800-01-21"
        type: string
      genotypingDateTo:
        description: фильтр по дате генотипирования ДО
        example: "2800-01-21"
        type: string
      hasAnyIllnes:
        default: false
        description: Флаг true - возращает коров у которых есть хотябы одно заболевение,
          false - возращает коров, у которых нет ни одного
        type: boolean
      hozId:
        description: ID фермы, для которой ищутся коровы
        example: 1
        type: integer
      illDateFrom:
        description: Фильтр по дате начала болезни ОТ
        example: "1800-01-21"
        type: string
      illDateTo:
        description: Фильтр по дате начала болезни ДО
        example: "1800-01-21"
        type: string
      inbrindingCoeffByFamilyFrom:
        default: 3.14
        description: фильтр по коэф. инбриндинга по роду ОТ
        type: number
      inbrindingCoeffByFamilyTo:
        default: 3.14
        description: фильтр по коэф. инбриндинга по роду ДО
        type: number
      inbrindingCoeffByGenotypeFrom:
        default: 3.14
        description: фильтр по коэф. инбриндинга по генотипу ОТ
        type: number
      inbrindingCoeffByGenotypeTo:
        default: 3.14
        description: фильтр по коэф. инбриндинга по генотипу ДО
        type: number
      inseminationDateFrom:
        description: Exterior             *float64 `default:"3.14" validate:"optional"`       //
          Фильтр по оценке экстерьера коровы, будет переработан
        example: "1800-01-21"
        type: string
      inseminationDateTo:
        description: Фильтр по дате осеменения коровы, ищет коров у которых было осеменение
          в эту дату или ранее
        example: "2800-01-21"
        type: string
      isAborted:
        default: false
        description: Фильтр по абортам Был/ не был
        type: boolean
      isDead:
        default: false
        description: Фильтр живых/мертвых коров (true - ищет мертвых, false - живых)
        type: boolean
      isGenotyped:
        type: boolean
      isIll:
        default: false
        description: ??? Не реализован
        type: boolean
      isStillBorn:
        default: false
        description: Фильтр по мертворождению Было/не было
        type: boolean
      isTwins:
        default: false
        description: Фильтр по родам двойняшек Было / не было
        type: boolean
      monogeneticIllneses:
        description: ID ген. заболеваний их /api/mongenetic_illnesses
        items:
          type: integer
        type: array
      orderBy:
        description: 'Может принимать следующие и только следующие значения: null,
          "RSHN", "InventoryNumber", "Name", "HozName", "BirthDate"'
        type: string
      orderByDesc:
        description: true - в порядке убывания, false - в порядке возрастания
        type: boolean
      pageNumber:
        default: 1
        description: Номер страницы для отображения
        type: integer
      regionId:
        description: по региону
        type: integer
      searchQuery:
        description: Имя, номер РСХН или инвентарный номер, по которым ищется корова
        example: Буренка
        type: string
      sex:
        description: ID пола коровы (если нужно несколько разных полов - несколько
          ID)
        items:
          type: integer
        type: array
    type: object
  models.Breed:
    properties:
      id:
        description: ID породы
        example: 1
        type: integer
      name:
        description: Название породы
        example: Какая-нибудь порода
        type: string
    type: object
  models.CheckMilk:
    properties:
      checkDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата конрольной дойки
      dryMatter:
        description: сухой материал
        type: number
      fat:
        description: Параметр контрольной дойки, как я понимаю кол-во жира в молоке
        example: 1
        type: number
      id:
        description: ID контрольной дойки
        example: 1
        type: integer
      lactationId:
        description: ID лактации для которой выполнена контрольная дойка
        example: 1
        type: integer
      milk:
        description: Параметр контрольной дойки, как я понимаю кол-во молока
        example: 1
        type: number
      probeNumber:
        description: номер пробы
        type: integer
      protein:
        description: Параметр контрольной дойки, как я понимаю кол-во белка в молоке
        example: 1
        type: number
      somaticNucCount:
        description: количество соматических клеток
        type: number
    type: object
  models.Cow:
    properties:
      approved:
        description: Целое число, 0 - корова не подтверждена, 1 - корова подтверждена,
          -1 - корова отклонена
        example: 1
        type: integer
      birkingDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата перебирковки
      birthDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: День рождения
      birthHozId:
        description: ID хозяйства рождения
        type: integer
      birthMethod:
        description: 'способ зачатия: клон, эмбрион, искусственное осеменени, естественное
          осеменение'
        type: string
      breedId:
        description: ID породы коровы
        example: 1
        type: integer
      createdAt:
        description: Время создания коровы в базе данных
        example: "2007-01-01"
        type: string
      deathDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата смерти
      departDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: День отбытия из коровника
      exterior:
        $ref: '#/definitions/models.Exterior'
      farmGroupId:
        description: ID хозяйства, которому корова принадлежит
        example: 1
        type: integer
      farmID:
        description: ID фермы, которой корова принадлежит
        example: 1
        type: integer
      fatherSelecs:
        description: ID коровы отца коровы
        type: integer
      genetic:
        $ref: '#/definitions/models.Genetic'
      gradeHozId:
        description: оценка по хозяйству
        example: 1
        type: integer
      gradeRegionId:
        description: оценка по региону
        example: 1
        type: integer
      holding:
        $ref: '#/definitions/models.Farm'
      holdingID:
        description: ID холдинга, которому принадлежит корова
        type: integer
      id:
        description: ID коровы
        example: 1
        type: integer
      identificationNumber:
        description: он все-таки есть! это какой-то не российский номер коровы
        type: string
      inbrindingCoeffByFamily:
        description: Exterior                float64  `example:"3.14"` // Оценка экстерьера
          коровы, будет переделано в ID экстерьера коровы
        example: 3.14
        type: number
      inventoryNumber:
        description: Инвентарный номер коровы
        example: "1213321"
        type: string
      motherSelecs:
        description: ID коровы матери коровы
        type: integer
      name:
        description: Кличка коровы
        example: Дима
        type: string
      previousHozId:
        description: ID предыдущего хозяйства, когда корову продают, она переходит
          к новому владельцу и становится "новой коровой"
        type: integer
      rshnnumber:
        description: РСХН номер коровы
        example: "1323323232"
        type: string
      selecsNumber:
        description: Селекс номер коровы
        example: 98989
        type: integer
      sexId:
        description: ID пола коровы
        example: 1
        type: integer
    type: object
  models.DailyMilk:
    properties:
      date:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата дойки
      fat:
        description: Суммарный жир `example:"12"`
        type: integer
      fatEvening:
        description: Жир вечером `example:"12"`
        type: integer
      fatMorning:
        description: Жир утром`example:"12"`
        type: integer
      fatNoon:
        description: Жир днем `example:"12"`
        type: integer
      id:
        type: integer
      lactationId:
        description: ID лактации во время котороый была дойка `example:"1"`
        type: integer
      milk:
        description: Суммарный надой `example:"12"`
        type: integer
      milkEvening:
        description: Надой вечером `example:"12"`
        type: integer
      milkMorning:
        description: Надой утром `example:"12"`
        type: integer
      milkNoon:
        description: Надой днем `example:"12"`
        type: integer
      protein:
        description: Суммарный белок `example:"12"`
        type: integer
      proteinEvening:
        description: Белок вечером `example:"12"`
        type: integer
      proteinMorning:
        description: Белок утром `example:"12"`
        type: integer
      proteinNoon:
        description: Белок днем `example:"12"`
        type: integer
    type: object
  models.DateOnly:
    properties:
      time.Time:
        type: string
    type: object
  models.Document:
    properties:
      cowID:
        description: ID коровы, для которой хранитя документ
        type: integer
      id:
        description: ID
        type: integer
      path:
        description: путь к документу относительно genmilk.ru/api/static/documents
        type: string
    type: object
  models.Event:
    properties:
      comment1:
        description: Коментарий 1 (по всей видиости сюда что-то пришет врач)
        type: string
      comment2:
        description: Коментарий 2
        type: string
      cowId:
        description: ID коровы
        type: integer
      dataResourse:
        description: источник данных
        type: string
      date:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата ветеринарного события
      daysFromLactation:
        description: дни от начала лактации
        type: integer
      eventType:
        $ref: '#/definitions/models.EventType'
      eventType1:
        $ref: '#/definitions/models.EventType'
      eventType1Id:
        description: стандартизированная название события
        type: integer
      eventType2:
        $ref: '#/definitions/models.EventType'
      eventType2Id:
        description: стандартизированное разновидность события
        type: integer
      eventTypeId:
        description: стандартизированная группа события
        type: integer
      id:
        type: integer
    type: object
  models.EventType:
    properties:
      code:
        description: код группы или разновидности или названия события
        type: integer
      id:
        type: integer
      name:
        description: Название группы/названия/разновидности события
        type: string
      parentId:
        description: ID старшего в иерархии типов события типа (для разновидности
          события ID группы событий, которой эта разновидность принадлежит)
        type: integer
      type:
        description: 1 - группа события, 2 - разновидность события, 3 - название события
        type: integer
    type: object
  models.Exterior:
    properties:
      acrumLength:
        type: number
      bodyDepth:
        type: number
      bodyStructure:
        type: number
      boneQHockJointRear:
        type: number
      centerLigamentDepth:
        type: number
      chestWidth:
        type: number
      conditioning:
        type: number
      cowID:
        type: integer
      exteriorType:
        type: number
      foreLegPosFront:
        type: number
      foreTeatDiameter:
        type: number
      foreTeatLendth:
        type: number
      foreUdderAttach:
        type: number
      foreUdderPlcRear:
        type: number
      foreUdderWidth:
        type: number
      harmonyOfMovement:
        type: number
      heightOfUdderAttach:
        type: number
      hindLegPosRead:
        type: number
      hindLegPosSide:
        type: number
      hindTeatPlc:
        type: number
      hindUdderWidth:
        type: number
      hoofAngle:
        type: number
      id:
        type: integer
      limbs:
        type: number
      milkStrength:
        type: number
      pelvicWidth:
        type: number
      picturePath:
        type: string
      prominenceOfMilkVeins:
        type: number
      rating:
        type: number
      rearTeatDiameter:
        type: number
      rearTeatLength:
        type: number
      sacrumAngle:
        type: number
      sacrumHeight:
        type: number
      topLine:
        type: number
      udder:
        type: number
      udderBalance:
        type: number
      udderDepth:
        type: number
    type: object
  models.Farm:
    properties:
      address:
        description: Адрес
        type: string
      cowsCount:
        description: количество коров
        type: integer
      description:
        description: описание
        type: string
      districtId:
        description: ID района, в котором находится хозяйство
        type: integer
      email:
        description: эл. почта
        type: string
      hozNumber:
        description: |-
          Region   Region `json:"-"`
          RegionId uint
        type: string
      id:
        type: integer
      inn:
        description: ИНН
        type: string
      name:
        description: Название хозяйства
        type: string
      nameShort:
        description: Краткое название хозйства
        type: string
      parrentId:
        description: ID более управляющего хоз-ва (для хозяйства - холдинг, для фермы
          - хозяйство)
        type: integer
      phone:
        description: телефон
        type: string
      type:
        description: 'Тип: хозяйство, ферма, холдинг'
        type: integer
    type: object
  models.Genetic:
    properties:
      bloodDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата взятия пробы крови
      cowID:
        description: ID коровы
        type: integer
      geneticIllnessesData:
        description: Список генетических заболеваний, пустой если нет
        items:
          $ref: '#/definitions/models.GeneticIllnessData'
        type: array
      gtcFilePath:
        description: путь к gtc файлу относительно genmilk.ru/api/static/gtc
        type: string
      id:
        description: ID записи о генотипировании
        type: integer
      inbrindingCoeffByGenotype:
        description: Коэф. инбриндинга по генотипу
        type: number
      probeNumber:
        description: Номер пробы
        type: string
      resultDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата получения  результата
    type: object
  models.GeneticIllness:
    properties:
      description:
        description: описание генетического заболевания
        type: string
      id:
        type: integer
      name:
        description: имя генетического заболевания
        type: string
      omia:
        description: Какой-то там ОМИЯ номер
        type: string
    type: object
  models.GeneticIllnessData:
    properties:
      geneticID:
        description: ID данных о генотипировании коровы, к которым относятся данные
          о заболеваниях коровы
        type: integer
      id:
        type: integer
      illness:
        $ref: '#/definitions/models.GeneticIllness'
      illnessID:
        description: ID заболевание
        type: integer
      status:
        $ref: '#/definitions/models.GeneticIllnessStatus'
      statusID:
        description: ID статус заболевания
        type: integer
    type: object
  models.GeneticIllnessStatus:
    properties:
      id:
        type: integer
      status:
        description: 'Статус заболевания: FREE, CARIER, BAD ...'
        type: string
    type: object
  models.Grade:
    properties:
      ebvFat:
        description: Оценка жира по EBV
        type: number
      ebvInsemenation:
        description: Оценка кратности осеменения по EBV
        type: number
      ebvMilk:
        description: Оценка удоя по EBV
        type: number
      ebvProtein:
        description: Оценка белка по EBV
        type: number
      evbService:
        description: Оценка длительности сервисного периода по EBV
        type: number
      generalValue:
        description: CowID           uint
        type: number
      id:
        description: ID оценки
        example: 1
        type: integer
    type: object
  models.HoldRegisterRequest:
    properties:
      address:
        type: string
      cowsCount:
        type: integer
      description:
        type: string
      districtId:
        type: string
      email:
        type: string
      hozNumber:
        type: string
      id:
        type: integer
      inn:
        type: string
      name:
        type: string
      phone:
        type: string
      shortName:
        type: string
    type: object
  models.HozRegisterRequest:
    properties:
      address:
        type: string
      cowsCount:
        type: integer
      description:
        type: string
      districtId:
        type: integer
      email:
        type: string
      holdNumber:
        type: string
      hozNumber:
        type: string
      id:
        type: integer
      inn:
        type: string
      name:
        type: string
      phone:
        type: string
      shortName:
        type: string
    type: object
  models.Lactation:
    properties:
      abort:
        description: был ли аборт
        type: boolean
      calvingCount:
        description: 'Количество рожденных телят: 0 - мертворождение, 2 - двойня'
        type: integer
      calvingDate:
        $ref: '#/definitions/models.DateOnly'
      cowId:
        description: ID коровы, данные о лактации которой записаны
        type: integer
      days:
        description: количество дней, когда корова дает молоко
        type: integer
      fat305:
        description: Суммарный жир за 305 дней
        type: number
      fatAll:
        description: Суммарный жир
        type: number
      id:
        type: integer
      insemenationDate:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата осеменения
      insemenationNum:
        description: Количество осеменений
        type: integer
      milk305:
        description: Суммарный надой за 305 дней
        type: number
      milkAll:
        description: Суммарный надой
        type: number
      number:
        description: номер лактации
        type: integer
      protein305:
        description: Суммарный белок за 305 дней
        type: number
      proteinAll:
        description: Суммарный белок
        type: number
      servicePeriod:
        description: 'сервис период коровы: время от отела до осеменения'
        type: integer
    type: object
  models.News:
    properties:
      date:
        allOf:
        - $ref: '#/definitions/models.DateOnly'
        description: Дата новости
      id:
        type: integer
      regionId:
        description: ID региона для которого записана новость
        type: integer
      text:
        description: Текст новости
        type: string
      title:
        description: Заголовок новости
        type: string
    type: object
  models.Partner:
    properties:
      address:
        description: Адрес
        type: string
      description:
        description: описание партнера
        type: string
      email:
        description: эл. почта
        type: string
      id:
        type: integer
      logoPath:
        description: путь к логотипу партнера относительно genmlik.ru/api/static/partners
        type: string
      name:
        description: Название партнера
        type: string
      phone:
        description: телефон
        type: string
    type: object
  models.Region:
    properties:
      id:
        default: 1
        type: integer
      name:
        description: название региона
        example: Усть-Каменский
        type: string
      news:
        items:
          $ref: '#/definitions/models.News'
        type: array
      regNum:
        description: номер региона (Архангельская область = 29)
        type: integer
    type: object
  models.Role:
    properties:
      id:
        type: integer
      name:
        description: название роли
        type: string
    type: object
  models.Sex:
    properties:
      id:
        type: integer
      name:
        description: Название пола
        type: string
    type: object
  models.Update:
    properties:
      date:
        description: Дата обновления базы данных
        type: string
      id:
        type: integer
    type: object
  models.UserRegisterRequest:
    properties:
      email:
        type: string
      hozNumber:
        description: 'номер хоз-ва к которому привязвыается пользователь: либо существует,
          либо newHoz'
        type: string
      id:
        type: integer
      nameSurnamePatronimic:
        type: string
      password:
        type: string
      phone:
        type: string
      regionId:
        type: integer
      roleId:
        type: integer
    type: object
  user_create.createUserData:
    properties:
      newHold:
        $ref: '#/definitions/models.HoldRegisterRequest'
      newHoz:
        $ref: '#/definitions/models.HozRegisterRequest'
      newUser:
        $ref: '#/definitions/models.UserRegisterRequest'
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: genmilk.ru
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GenMilk API
  version: "1.0"
paths:
  /analitics/checkMilks/{year}/byDistrict/{district}/byHoz:
    post:
      description: Возращает словарь год - количеств генотипированных коров, по ключу
        -1 генотипированные за все годы
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: район за который собирается статистика
        in: path
        name: district
        required: true
        type: integer
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: boolean
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/checkMilks/{year}/byRegion:
    post:
      description: Возращает словарь год - количеств генотипированных коров, по ключу
        -1 генотипированные за все годы
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: boolean
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/checkMilks/{year}/byRegion/{region}/byDistrict:
    post:
      description: Возращает словарь год - количеств генотипированных коров, по ключу
        -1 генотипированные за все годы
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: регион за который собирается статистика
        in: path
        name: region
        required: true
        type: integer
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: boolean
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/checkMilks/years:
    post:
      description: Возращает словарь год - количеств генотипированных коров, по ключу
        -1 генотипированные за все годы
      parameters:
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: boolean
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/genotyped/{year}/byDistrict/{district}/hold:
    get:
      description: Возращает словарь хозяйство - количество живых коров, количество
        генотипированных
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: район за который собирается статистика
        in: path
        name: district
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/analitics.byHoldStatistics'
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/genotyped/{year}/byDistrict/{district}/hoz:
    post:
      description: Возращает словарь хозяйство - количество живых коров, количество
        генотипированных
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: район за который собирается статистика
        in: path
        name: district
        required: true
        type: integer
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/analitics.byHozStatistics'
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/genotyped/{year}/byHold/{hold}/hoz:
    get:
      description: Возращает словарь хозяйство - количество живых коров, количество
        генотипированных
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: холдинг за который собирается статистика
        in: path
        name: hold
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/analitics.byHoldStatistics'
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/genotyped/{year}/byRegion/{region}/districts:
    get:
      description: Возращает словарь район - количество живых коров, количество генотипированных
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: регион за который собирается статистика
        in: path
        name: region
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/analitics.byDistrictStatistics'
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
    post:
      description: Возращает словарь район - количество живых коров, количество генотипированных
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: регион за который собирается статистика
        in: path
        name: region
        required: true
        type: integer
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/analitics.byDistrictStatistics'
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/genotyped/{year}/regions:
    get:
      description: Возращает словарь регион - количество живых коров, количество генотипированных
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/analitics.byRegionStatistics'
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
    post:
      description: Возращает словарь регион - количество живых коров, количество генотипированных
      parameters:
      - description: год за который собирается статистика
        in: path
        name: year
        required: true
        type: integer
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                $ref: '#/definitions/analitics.byRegionStatistics'
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /analitics/genotyped/years:
    get:
      description: Возращает словарь год - количеств генотипированных коров, по ключу
        -1 генотипированные за все годы
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: integer
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
    post:
      description: Возращает словарь год - количеств генотипированных коров, по ключу
        -1 генотипированные за все годы
      parameters:
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties:
                type: boolean
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of years
      tags:
      - Analitics
  /auth/checkEmail:
    get:
      consumes:
      - application/json
      parameters:
      - description: email of user to check
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: CHECK EMAIL
      tags:
      - REGISTER
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: applied filters
        in: body
        name: AuthData
        required: true
        schema:
          $ref: '#/definitions/auth.AuthData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: {}
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: LOGIN
      tags:
      - LOGIN
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: applied filters
        in: body
        name: RegisterData
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: REGISTER
      tags:
      - REGISTER
  /auth/roles:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: {}
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: LOGIN
      tags:
      - LOGIN
  /breeds:
    get:
      description: Возращает список всех пород. Разрешает отсутсвие фильтров
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Breed'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of breeds
      tags:
      - Breeds
  /breeds/{id}:
    get:
      description: Возращает породу.
      parameters:
      - description: ID конкретной породы, если нужно вернуть одну.
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Breed'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get breed
      tags:
      - Breeds
  /checkMilks:
    get:
      description: Возращает список контрольных доек
      parameters:
      - description: id лактации, для корой ищутся котнольные дойки
        in: query
        name: lactation_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CheckMilk'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of checkMilks
      tags:
      - CheckMilks
  /checkMilks/{id}:
    get:
      description: Возращает контрольную дойку
      parameters:
      - description: id контрольной дойки
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CheckMilk'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get checkMilk
      tags:
      - CheckMilks
  /cows:
    get:
      description: Возращает коров удовлетворяющих условиям фильтрации.
      parameters:
      - description: ID фермы (НЕ хозяйства), к которой принадлежит корова
        in: query
        name: farm_id
        type: integer
      - description: ID хозяйства (НЕ фермы), к которому принадлежит корова
        in: query
        name: farm_group_id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cows.ReserealizedCow'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of cows
      tags:
      - Cows
  /cows/{id}:
    get:
      description: Возращает конкретную корову. Поля Father и Mother, имеют FatherId
        и MotherID null всегда, это неправильно, но так надо
      parameters:
      - description: ID конкретной коровы, чтобы ее вернуть
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cows.ReserealizedCow'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of cows
      tags:
      - Cows
  /cows/{id}/checkMilks:
    get:
      description: Возращает список всех контрольных доек для конкретной коровы.
      parameters:
      - description: ID коровы для которой ищутся контрольные дойки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CheckMilk'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of check milks
      tags:
      - Cows
  /cows/{id}/children:
    get:
      description: Возращает список всех детей для конкретной коровы.
      parameters:
      - description: ID коровы для которой ищутся лактации
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Lactation'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of children
      tags:
      - Cows
  /cows/{id}/documents:
    get:
      description: Возращает генетическую информацию для коровы, null, если нет
      parameters:
      - description: ID коровы для которой ищется генетическая информация
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of check milks
      tags:
      - Cows
  /cows/{id}/exterior:
    get:
      description: Возращает информацию об экстерьере, null, если нет
      parameters:
      - description: ID коровы для которой ищется экстерьер
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Exterior'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get exterior
      tags:
      - Cows
  /cows/{id}/genetic:
    get:
      description: Возращает генетическую информацию для коровы, null, если нет
      parameters:
      - description: ID коровы для которой ищется генетическая информация
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Genetic'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of check milks
      tags:
      - Cows
  /cows/{id}/grades:
    get:
      description: Возращает список всех оценок конкретной коровы.
      parameters:
      - description: ID коровы для которой ищутся оценки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/models.Grade'
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of children
      tags:
      - Cows
  /cows/{id}/health:
    get:
      description: Возращает список всех ветеренарных мероприятий для конкретной коровы.
      parameters:
      - description: ID коровы для которой ищутся вет мероприятия
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of health events
      tags:
      - Cows
  /cows/{id}/lactations:
    get:
      description: Возращает список всех лактаций для конкретной коровы.
      parameters:
      - description: ID коровы для которой ищутся лактации
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Lactation'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of lactations
      tags:
      - Cows
  /cows/filter:
    post:
      consumes:
      - application/json
      parameters:
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows_filter.CowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cows.FilterSerializedCow'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get filtered list of cows
      tags:
      - Cows
  /dailyMilks:
    get:
      description: Возвращает дойки удовлетворяющие фильтрам
      parameters:
      - description: id lactation to search dailimilks
        in: query
        name: lactation_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DailyMilk'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of DailyMilks
      tags:
      - DailyMilks
  /dailyMilks/{id}:
    get:
      description: Возращает конкретную дойку коровы.
      parameters:
      - description: id of farm to return
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DailyMilk'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of DailyMilks
      tags:
      - DailyMilks
  /districts:
    get:
      description: Возращает все районы. Разрешает отсутсвие фильтров
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DailyMilk'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of Districts
      tags:
      - Districtts
  /farms:
    get:
      description: Возращает список ферм. Разрешает отсутсвие фильтров
      parameters:
      - description: ID более главной фермы, null для поиска хозяйств
        in: query
        name: parrent_id
        type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Farm'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of farms
      tags:
      - Farms
  /farms/{id}:
    get:
      description: GВозращает конкретную ферму
      parameters:
      - description: id of farm to return
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Farm'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get farm
      tags:
      - Farms
  /lactations/{id}:
    get:
      description: |-
        Возращает конкретную лактацию
        DOES NOT RETURN SUBOBJECTS
      parameters:
      - description: id лактации
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Lactation'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of farms
      tags:
      - Lactations
  /monogenetic_illnesses:
    get:
      description: Возращает список генетических заболеваний
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GeneticIllness'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of monogenetic illnesses
      tags:
      - MonogeneticIllnessses
  /partners:
    get:
      description: Возращает список партнеров
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Partner'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of partners
      tags:
      - Partners
  /regions:
    get:
      description: Возращает все регионы
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Region'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of regions
      tags:
      - Regions
  /regions/{id}:
    get:
      description: Возращает регион
      parameters:
      - description: id региона
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Region'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of regions
      tags:
      - Regions
  /regions/{id}/getFarms:
    get:
      description: Возращает все фермы в регионе
      parameters:
      - description: id of region
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Farm'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get farm by region id
      tags:
      - Regions
  /regions/{id}/news:
    get:
      description: Возращает новости региона
      parameters:
      - description: id региона
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.News'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of regions
      tags:
      - Regions
  /sexes:
    get:
      description: Возращает список полов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Sex'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of sexes
      tags:
      - Sexes
  /updates:
    get:
      description: Возращает дату апдейта БД
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Update'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get update date and ID
      tags:
      - Sexes
  /user/create:
    post:
      description: Возращает список полов
      parameters:
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/user_create.createUserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user_create.createUserData'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get list of sexes
      tags:
      - User
  /user/verifyEmail:
    get:
      description: Запрос на валидацию имэйла
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Sex'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of sexes
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
