basePath: /
definitions:
  cows.FilterSerializedCow:
    properties:
      birkingDate:
        example: 40123-01-15
        type: string
      birthDate:
        example: "2040-01-21"
        type: string
      breedName:
        example: Какая-нибудь порода
        type: string
      calvingDate:
        example: "1999-01-11"
        type: string
      checkMilkDate:
        example: "2020-01-02"
        type: string
      departDate:
        example: "2020-01-30"
        type: string
      farmGroupName:
        example: ООО Аурус
        type: string
      genotyped:
        example: true
        type: boolean
      insemenationDate:
        example: "2007-01-01"
        type: string
      inventoryNumber:
        example: "321"
        type: string
      isDead:
        example: false
        type: boolean
      name:
        example: Буренка
        type: string
      rshnnumber:
        example: "123"
        type: string
    required:
    - birthDate
    - farmGroupName
    - genotyped
    - inventoryNumber
    - name
    - rshnnumber
    type: object
  cows.cowsFilter:
    properties:
      birkingDateFrom:
        description: Фильтр по дате перебирковки коровы, ищет коров у которых быа
          перебирковка в эту дату или позднее
        example: "1800-01-21"
        type: string
      birkingDateTo:
        description: Фильтр по дате осеменения коровы, ищет коров у которых была перебирковка
          в эту дату или позднее
        example: "2800-01-21"
        type: string
      birthDateFrom:
        description: Фильтр по дню рождения коровы ОТ (возращает всех кто родился
          в эту дату или позднее)
        example: "1800-01-21"
        type: string
      birthDateTo:
        description: Фильтр по дню рождения коровы ОТ (возращает всех кто родился
          в эту дату или раньше)
        example: "2800-01-21"
        type: string
      breedId:
        description: Фильтр по ID пород несколько ID пород - возращает всех коров,
          ID пород которых в списке
        items:
          type: integer
        type: array
      calvingDateFrom:
        description: Фильтр по дате отела коровы, ищет коров у которых был отел в
          эту дату или позднее
        example: "1800-01-21"
        type: string
      calvingDateTo:
        description: Фильтр по дате осеменения коровы, ищет коров у которых был отел
          в эту дату или позднее
        example: "2800-01-21"
        type: string
      controlMilkingDateFrom:
        description: Фильтр по дате контрольной дойки, ищет коров у которых была контрольная
          дойка в эту дату или позднее
        example: "1800-01-21"
        type: string
      controlMilkingDateTo:
        description: Фильтр по дате контрольной дойки, ищет коров у которых была контрольная
          дойка в эту дату или ранее
        example: "2800-01-21"
        type: string
      departDateFrom:
        description: Фильтр по дате открепления коровы ищет всех коров открепленных
          от коровника в эту дату или позднее
        example: "1800-01-21"
        type: string
      departDateTo:
        description: Фильтр по дате открепления коровы ищет всех коров открепленных
          от коровника в эту дату или раньше
        example: "2800-01-21"
        type: string
      entitiesOnPage:
        default: 50
        description: Количество сущностей на странице
        type: integer
      exterior:
        default: 3.14
        description: Фильтр по оценке экстерьера коровы, будет переработан
        type: number
      farmID:
        description: ID фермы, для которой ищутся коровы
        example: 1
        type: integer
      genotypingDateFrom:
        description: ??? Не реализован
        example: "1800-01-21"
        type: string
      genotypingDateTo:
        description: ??? Не реализован
        example: "2800-01-21"
        type: string
      inbrindingCoeffByFamilyFrom:
        default: 3.14
        description: Не реализован
        type: number
      inbrindingCoeffByFamilyTo:
        default: 3.14
        description: Не реализован
        type: number
      inbrindingCoeffByFenotypeFrom:
        default: 3.14
        description: ?Не реализован
        type: number
      inbrindingCoeffByFenotypeTo:
        default: 3.14
        description: ?Не реализован
        type: number
      inseminationDateFrom:
        description: Фильтр по дате осеменения коровы, ищет коров у которых было осеменение
          в эту дату или позднее
        example: "1800-01-21"
        type: string
      inseminationDateTo:
        description: Фильтр по дате осеменения коровы, ищет коров у которых было осеменение
          в эту дату или ранее
        example: "2800-01-21"
        type: string
      isAborted:
        default: false
        description: Фильтр по абортам Был/ не был
        type: boolean
      isDead:
        default: false
        description: Фильтр живых/мертвых коров (true - ищет мертвых, false - живых)
        type: boolean
      isIll:
        default: false
        description: ??? Не реализован
        type: boolean
      isStillBorn:
        default: false
        description: Фильтр по мертворождению Было/не было
        type: boolean
      isTwins:
        default: false
        description: Фильтр по родам двойняшек Было / не было
        type: boolean
      monogeneticIllneses:
        description: ?Не реализован
        items:
          type: integer
        type: array
      pageNumber:
        default: 1
        description: Номер страницы для отображения
        type: integer
      searchQuery:
        description: Имя, номер РСХН или инвентарный номер, по которым ищется корова
        example: Буренка
        type: string
      sex:
        description: ID пола коровы (если нужно несколько разных полов - несколько
          ID)
        items:
          type: integer
        type: array
    type: object
  models.Breed:
    properties:
      id:
        description: ID породы
        example: 1
        type: integer
      name:
        description: Название породы
        example: Какая-нибудь порода
        type: string
    type: object
  models.CheckMilk:
    properties:
      checkDate:
        description: Время конрольной дойки
        example: "1999-02-12"
        type: string
      fat:
        description: Параметр контрольной дойки, как я понимаю кол-во жира в молоке
        example: 1
        type: integer
      id:
        description: ID контрольной дойки
        example: 1
        type: integer
      lactationId:
        description: ID лактации для которой выполнена контрольная дойка
        example: 1
        type: integer
      milk:
        description: Параметр контрольной дойки, как я понимаю кол-во молока
        example: 1
        type: integer
      protein:
        description: Параметр контрольной дойки, как я понимаю кол-во белка в молоке
        example: 1
        type: integer
    type: object
  models.Cow:
    properties:
      approved:
        description: Целое число, что-то для админов, чтобы подтверждать коров
        example: 1
        type: integer
      birkingDate:
        description: Дата перебирковки
        example: "2007-01-01"
        type: string
      birthDate:
        description: День рождения
        example: "2007-01-01"
        type: string
      breedId:
        description: ID породы коровы
        example: 1
        type: integer
      createdAt:
        description: Время создания коровы в базе данных
        example: "2007-01-01"
        type: string
      deathDate:
        description: Дата смерти
        example: "2007-01-01"
        type: string
      departDate:
        description: День отбытия из коровника
        example: "2007-01-01"
        type: string
      exterior:
        description: Оценка экстерьера коровы, будет переделано в ID экстерьера коровы
        example: 3.14
        type: number
      farmGroupId:
        description: ID хозяйства, которому корова принадлежит
        example: 1
        type: integer
      farmID:
        description: ID фермы, которой корова принадлежит
        example: 1
        type: integer
      fatherId:
        description: ID коровы отца коровы
        example: 1
        type: integer
      id:
        description: ID коровы
        example: 1
        type: integer
      identificationNumber:
        description: Инвентарный номер коровы, кажется он уже был
        example: "1213321"
        type: string
      inbrindingCoeffByFamily:
        description: Коэф. инбриндинга по роду
        example: 3.14
        type: number
      inventoryNumber:
        description: Инвентарный номер коровы
        example: "1213321"
        type: string
      isDead:
        description: Флаг мертва / жива
        example: true
        type: boolean
      motherId:
        description: ID коровы матери коровы
        example: 1
        type: integer
      name:
        description: Кличка коровы
        example: Дима
        type: string
      rshnnumber:
        description: РСХН номер коровы
        example: "1323323232"
        type: string
      selecsNumber:
        description: Селекс номер коровы
        example: "98989"
        type: string
      sexId:
        description: ID пола коровы
        example: 1
        type: integer
    type: object
  models.DailyMilk:
    properties:
      date:
        type: string
      fat:
        type: integer
      fatEvening:
        type: integer
      fatMorning:
        type: integer
      fatNoon:
        type: integer
      id:
        type: integer
      lactationId:
        type: integer
      milk:
        type: integer
      milkEvening:
        type: integer
      milkMorning:
        type: integer
      milkNoon:
        type: integer
      protein:
        type: integer
      proteinEvening:
        type: integer
      proteinMorning:
        type: integer
      proteinNoon:
        type: integer
    type: object
  models.Farm:
    properties:
      address:
        type: string
      cowsCount:
        type: integer
      description:
        type: string
      districtId:
        type: integer
      email:
        type: string
      id:
        type: integer
      inn:
        type: string
      name:
        type: string
      nameShort:
        type: string
      parrentId:
        type: integer
      phone:
        type: string
      regionId:
        type: integer
      type:
        type: integer
    type: object
  models.Lactation:
    properties:
      abort:
        type: boolean
      calvingCount:
        type: integer
      calvingDate:
        type: string
      cowId:
        type: integer
      date:
        type: string
      days:
        type: integer
      fat305:
        type: integer
      fatAll:
        type: integer
      id:
        type: integer
      insemenationDate:
        type: string
      insemenationNum:
        type: integer
      milk305:
        type: integer
      milkAll:
        type: integer
      number:
        type: integer
      protein305:
        type: integer
      proteinAll:
        type: integer
    type: object
  models.Region:
    properties:
      id:
        default: 1
        type: integer
      name:
        example: Усть-Каменский
        type: string
    type: object
  models.Sex:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: 83.69.248.180:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GenMilk API
  version: "1.0"
paths:
  /breeds/get:
    get:
      description: Возращает список пород
      parameters:
      - description: ID конкретной породы, если нужно вернуть одну
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Breed'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of breeds
      tags:
      - Breeds
  /checkMilks/get:
    get:
      description: Возращает список контрольный доек
      parameters:
      - description: id контрольной дойки
        in: query
        name: id
        type: integer
      - description: id лактации, для корой ищутся котнольные дойки
        in: query
        name: lactation_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CheckMilk'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of checkMilks
      tags:
      - CheckMilks
  /cows/filter:
    post:
      consumes:
      - application/json
      description: |-
        Get filtered list of cows.
        SearchQuery - имя, номер РСХН или инвентарный номер
        PageNumber - номер страницы для отображения
        EntitiesOnPage - количество коров на каждой странице
        Sex - массив полов для поиска (можно выбрать несколько)
        FarmID - ID фермы на которой живет корова
        BirthDateFrom - Отображает коров, родившихся после этой даты
        BirthDateTo - Отображает коров, родившихся до этой даты
        IsDead - Если флаг истина - ищет мертвых коров, иначе живых
        DepartDateFrom - Ищет коров отбывших из коровника после данной даты
        DepartDateTo - Ищет коров отбывших из коровника до данной даты
        BreedId - ищет коров имеющих одну из пород по BreedId
        GenotypingDateFrom - НЕ ИСПОЛЬЗУЕТСЯ
        GenotypingDateTo - НЕ ИСПОЛЬЗУЕТСЯ
        ControlMilkingDateFrom - ищет коров у которых была хотябы одна контрольная дойка после этой даты
        ControlMilkingDateTo - ищет коров у которых была хотябы одна контрольная дойка до этой даты

        Exterior - Ищет коров с оценкой экстерьера равной этому значению
        InseminationDateFrom - Ищет коров которые были хотябы раз осеменены после данной даты
        InseminationDateTo - Ищет коров которые были хотябы раз осеменены до данной даты
        CalvingDateFrom  - Ищет коров у которых был отел хотябы раз после данной даты
        CalvingDateTo - Ищет коров у которых был отел хотябы раз до данной даты
        IsStillBorn  - Ищет коров у которых хотябы раз было мертворождение
        IsTwins - Ищет коров у которых хотябы раз родились близнецы/двойняшки
        IsAborted - Ищет коров, которым хотябы раз сделали аборт
        IsIll - НЕ ИСОПЛЬЗУЕТСЯ
        BirkingDateFrom - Ищет коров у которых дата перебирковки больше
        BirkingDateTo - Ищет коров у которых дата перебирковки меньше

        InbrindingCoeffByFamilyFrom Ищет коров, у которых коэф. инбриндинга по роду больше
        InbrindingCoeffByFamilyTo   - Ищет коров у которых дата перебирковки меньше

        InbrindingCoeffByFenotypeFrom Genotiping needed
        InbrindingCoeffByFenotypeTo    Genotiping needed

        MonogeneticIllneses []uint Genotiping needed
      parameters:
      - description: applied filters
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/cows.cowsFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cows.FilterSerializedCow'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get filtered list of cows
      tags:
      - Cows
  /cows/get:
    get:
      description: Возращает список коров.
      parameters:
      - description: ID конкретной коровы, чтобы ее вернуть
        in: query
        name: id
        type: integer
      - description: ID фермы (НЕ хозяйства), к которой принадлежит корова
        in: query
        name: farm_id
        type: integer
      - description: ID хозяйства (НЕ фермы), к которому принадлежит корова
        in: query
        name: farm_group_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cow'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of cows
      tags:
      - Cows
  /dailyMilks/get:
    get:
      description: |-
        Get list of DailyMilks.
        DOES NOT RETURN SUBOBJECTS
      parameters:
      - description: id of farm to return
        in: query
        name: id
        type: integer
      - description: id lactation to search dailimilks
        in: query
        name: lactation_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DailyMilk'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of DailyMilks
      tags:
      - DailyMilks
  /districts/get:
    get:
      description: |-
        Get list of Districts.
        DOES NOT RETURN SUBOBJECTS
      parameters:
      - description: id of farm to return
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DailyMilk'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of Districts
      tags:
      - Districtts
  /farms/get:
    get:
      description: |-
        Get list of farms.
        DOES NOT RETURN SUBOBJECTS
      parameters:
      - description: id of farm to return
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Farm'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of farms
      tags:
      - Farms
  /lactations/get:
    get:
      description: |-
        Get list of farms.
        DOES NOT RETURN SUBOBJECTS
      parameters:
      - description: id of farm to return
        in: query
        name: id
        type: integer
      - description: id of cow for wich lactations should be find
        in: query
        name: cow_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Lactation'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of farms
      tags:
      - Lactations
  /regions/get:
    get:
      description: Get list of regions.
      parameters:
      - description: id of region to return
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Region'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of regions
      tags:
      - Regions
  /sexes/get:
    get:
      description: |-
        Get list of breeds.
        DOES NOT RETURN SUBOBJECTS
      parameters:
      - description: id of farm to return
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Sex'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Get list of breeds
      tags:
      - Sexes
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
