// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/analitics/genotyped/years": {
            "get": {
                "description": "Возращает словарь год - количеств генотипированных коров, по ключу -1 генотипированные за все годы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analitics"
                ],
                "summary": "Get list of years",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/analitics/genotyped/{year}/regions": {
            "get": {
                "description": "Возращает словарь регион - количество живых коров, количество генотипированных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analitics"
                ],
                "summary": "Get list of years",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "год за который собирается статистика",
                        "name": "year",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/breeds": {
            "get": {
                "description": "Возращает список всех пород. Разрешает отсутсвие фильтров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breeds"
                ],
                "summary": "Get list of breeds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Breed"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/breeds/{id}": {
            "get": {
                "description": "Возращает породу.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Breeds"
                ],
                "summary": "Get breed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID конкретной породы, если нужно вернуть одну.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Breed"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/checkMilks": {
            "get": {
                "description": "Возращает список контрольных доек",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CheckMilks"
                ],
                "summary": "Get list of checkMilks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id лактации, для корой ищутся котнольные дойки",
                        "name": "lactation_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CheckMilk"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/checkMilks/{id}": {
            "get": {
                "description": "Возращает контрольную дойку",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CheckMilks"
                ],
                "summary": "Get checkMilk",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id контрольной дойки",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CheckMilk"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/cows": {
            "get": {
                "description": "Возращает коров удовлетворяющих условиям фильтрации.",
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of cows",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID фермы (НЕ хозяйства), к которой принадлежит корова",
                        "name": "farm_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ID хозяйства (НЕ фермы), к которому принадлежит корова",
                        "name": "farm_group_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cows.ReserealizedCow"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/cows/filter": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get filtered list of cows",
                "parameters": [
                    {
                        "description": "applied filters",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cows.cowsFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/cows.FilterSerializedCow"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/cows/{id}": {
            "get": {
                "description": "Возращает конкретную корову. Поля Father и Mother, имеют FatherId и MotherID null всегда, это неправильно, но так надо",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of cows",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID конкретной коровы, чтобы ее вернуть",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cows.ReserealizedCow"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/cows/{id}/checkMilks": {
            "get": {
                "description": "Возращает список всех контрольных доек для конкретной коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of check milks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся контрольные дойки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CheckMilk"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/cows/{id}/exterior": {
            "get": {
                "description": "Возращает информацию об экстерьере, null, если нет",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get exterior",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищется экстерьер",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Exterior"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/cows/{id}/genetic": {
            "get": {
                "description": "Возращает генетическую информацию для коровы, null, если нет",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of check milks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищется генетическая информация",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Genetic"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/cows/{id}/lactations": {
            "get": {
                "description": "Возращает список всех лактаций для конкретной коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cows"
                ],
                "summary": "Get list of lactations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID коровы для которой ищутся лактации",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Lactation"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/dailyMilks": {
            "get": {
                "description": "Возвращает дойки удовлетворяющие фильтрам",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DailyMilks"
                ],
                "summary": "Get list of DailyMilks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id lactation to search dailimilks",
                        "name": "lactation_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyMilk"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/dailyMilks/{id}": {
            "get": {
                "description": "Возращает конкретную дойку коровы.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DailyMilks"
                ],
                "summary": "Get list of DailyMilks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of farm to return",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DailyMilk"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/districts": {
            "get": {
                "description": "Возращает все районы. Разрешает отсутсвие фильтров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Districtts"
                ],
                "summary": "Get list of Districts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DailyMilk"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/farms": {
            "get": {
                "description": "Возращает список ферм. Разрешает отсутсвие фильтров",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Get list of farms",
                "parameters": [
                    {
                        "type": "object",
                        "description": "ID более главной фермы, null для поиска хозяйств",
                        "name": "parrent_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Farm"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/farms/{id}": {
            "get": {
                "description": "GВозращает конкретную ферму",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Farms"
                ],
                "summary": "Get farm",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of farm to return",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Farm"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/lactations/{id}": {
            "get": {
                "description": "Возращает конкретную лактацию\nDOES NOT RETURN SUBOBJECTS",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lactations"
                ],
                "summary": "Get list of farms",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id лактации",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Lactation"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/monogenetic_illnesses": {
            "get": {
                "description": "Возращает список генетических заболеваний",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MonogeneticIllnessses"
                ],
                "summary": "Get list of monogenetic illnesses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GeneticIllness"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/regions": {
            "get": {
                "description": "Возращает все регионы",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Regions"
                ],
                "summary": "Get list of regions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Region"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/regions/{id}": {
            "get": {
                "description": "Возращает регион",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Regions"
                ],
                "summary": "Get list of regions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id региона",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Region"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/sexes": {
            "get": {
                "description": "Возращает список полов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sexes"
                ],
                "summary": "Get list of sexes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Sex"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cows.FilterSerializedCow": {
            "type": "object",
            "required": [
                "birthDate",
                "farmGroupName",
                "genotyped",
                "id",
                "inventoryNumber",
                "name",
                "rshnnumber"
            ],
            "properties": {
                "birkingDate": {
                    "$ref": "#/definitions/models.DateOnly"
                },
                "birthDate": {
                    "$ref": "#/definitions/models.DateOnly"
                },
                "breedName": {
                    "type": "string",
                    "example": "Какая-нибудь порода"
                },
                "calvingDate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DateOnly"
                    }
                },
                "checkMilkDate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DateOnly"
                    }
                },
                "departDate": {
                    "$ref": "#/definitions/models.DateOnly"
                },
                "exteriorRating": {
                    "type": "number"
                },
                "farmGroupName": {
                    "type": "string",
                    "example": "ООО Аурус"
                },
                "genotyped": {
                    "type": "boolean",
                    "example": true
                },
                "genotypingDate": {
                    "$ref": "#/definitions/models.DateOnly"
                },
                "id": {
                    "type": "integer",
                    "example": 123
                },
                "inbrindingCoeffByFamily": {
                    "type": "number",
                    "example": 3.14
                },
                "inbrindingCoeffByGenotype": {
                    "type": "number",
                    "example": 3.14
                },
                "insemenationDate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DateOnly"
                    }
                },
                "inventoryNumber": {
                    "type": "string",
                    "example": "321"
                },
                "monogeneticIllneses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GeneticIllness"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Буренка"
                },
                "rshnnumber": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "cows.ReserealizedCow": {
            "type": "object",
            "properties": {
                "approved": {
                    "description": "Целое число, что-то для админов, чтобы подтверждать коров",
                    "type": "integer",
                    "example": 1
                },
                "birkingDate": {
                    "description": "Дата перебирковки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "birthDate": {
                    "description": "День рождения",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "breedId": {
                    "description": "ID породы коровы",
                    "type": "integer",
                    "example": 1
                },
                "breedName": {
                    "description": "порода, null если нет",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Время создания коровы в базе данных",
                    "type": "string",
                    "example": "2007-01-01"
                },
                "deathDate": {
                    "description": "Дата смерти",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "departDate": {
                    "description": "День отбытия из коровника",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "exterior": {
                    "$ref": "#/definitions/models.Exterior"
                },
                "farmGroupId": {
                    "description": "ID хозяйства, которому корова принадлежит",
                    "type": "integer",
                    "example": 1
                },
                "farmID": {
                    "description": "ID фермы, которой корова принадлежит",
                    "type": "integer",
                    "example": 1
                },
                "farmName": {
                    "description": "ферма на которой живет, null если нет",
                    "type": "string"
                },
                "father": {
                    "description": "Отец, null если нет",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cows.ReserealizedCow"
                        }
                    ]
                },
                "fatherId": {
                    "description": "ID коровы отца коровы",
                    "type": "integer",
                    "example": 1
                },
                "genetic": {
                    "description": "Информация о генотипировании, null если нет",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Genetic"
                        }
                    ]
                },
                "hozHame": {
                    "description": "хозяйство на котором живет, null, если нет",
                    "type": "string"
                },
                "id": {
                    "description": "ID коровы",
                    "type": "integer",
                    "example": 1
                },
                "inbrindingCoeffByFamily": {
                    "description": "Exterior                float64  ` + "`" + `example:\"3.14\"` + "`" + ` // Оценка экстерьера коровы, будет переделано в ID экстерьера коровы",
                    "type": "number",
                    "example": 3.14
                },
                "inventoryNumber": {
                    "description": "Инвентарный номер коровы",
                    "type": "string",
                    "example": "1213321"
                },
                "mother": {
                    "description": "Мать, null, если нет",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cows.ReserealizedCow"
                        }
                    ]
                },
                "motherId": {
                    "description": "ID коровы матери коровы",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Кличка коровы",
                    "type": "string",
                    "example": "Дима"
                },
                "rshnnumber": {
                    "description": "РСХН номер коровы",
                    "type": "string",
                    "example": "1323323232"
                },
                "selecsNumber": {
                    "description": "Селекс номер коровы",
                    "type": "string",
                    "example": "98989"
                },
                "sexId": {
                    "description": "ID пола коровы",
                    "type": "integer",
                    "example": 1
                },
                "sexName": {
                    "description": "пол, null если нет",
                    "type": "string"
                }
            }
        },
        "cows.cowsFilter": {
            "type": "object",
            "properties": {
                "birkingDateFrom": {
                    "description": "Фильтр по дате перебирковки коровы, ищет коров у которых быа перебирковка в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "birkingDateTo": {
                    "description": "Фильтр по дате осеменения коровы, ищет коров у которых была перебирковка в эту дату или позднее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "birthDateFrom": {
                    "description": "Фильтр по дню рождения коровы ОТ (возращает всех кто родился в эту дату или позднее)",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "birthDateTo": {
                    "description": "Фильтр по дню рождения коровы ОТ (возращает всех кто родился в эту дату или раньше)",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "breedId": {
                    "description": "Фильтр по ID пород несколько ID пород - возращает всех коров, ID пород которых в списке",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "calvingDateFrom": {
                    "description": "Фильтр по дате отела коровы, ищет коров у которых был отел в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "calvingDateTo": {
                    "description": "Фильтр по дате осеменения коровы, ищет коров у которых был отел в эту дату или позднее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "controlMilkingDateFrom": {
                    "description": "Фильтр по дате контрольной дойки, ищет коров у которых была контрольная дойка в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "controlMilkingDateTo": {
                    "description": "Фильтр по дате контрольной дойки, ищет коров у которых была контрольная дойка в эту дату или ранее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "departDateFrom": {
                    "description": "Фильтр по дате открепления коровы ищет всех коров открепленных от коровника в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "departDateTo": {
                    "description": "Фильтр по дате открепления коровы ищет всех коров открепленных от коровника в эту дату или раньше",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "entitiesOnPage": {
                    "description": "Количество сущностей на странице",
                    "type": "integer",
                    "default": 50
                },
                "exterior": {
                    "description": "Фильтр по оценке экстерьера коровы, будет переработан",
                    "type": "number",
                    "default": 3.14
                },
                "genotypingDateFrom": {
                    "description": "фильтр по дате генотипирования ОТ",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "genotypingDateTo": {
                    "description": "фильтр по дате генотипирования ДО",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "hozId": {
                    "description": "ID фермы, для которой ищутся коровы",
                    "type": "integer",
                    "example": 1
                },
                "inbrindingCoeffByFamilyFrom": {
                    "description": "фильтр по коэф. инбриндинга по роду ОТ",
                    "type": "number",
                    "default": 3.14
                },
                "inbrindingCoeffByFamilyTo": {
                    "description": "фильтр по коэф. инбриндинга по роду ДО",
                    "type": "number",
                    "default": 3.14
                },
                "inbrindingCoeffByGenotypeFrom": {
                    "description": "фильтр по коэф. инбриндинга по генотипу ОТ",
                    "type": "number",
                    "default": 3.14
                },
                "inbrindingCoeffByGenotypeTo": {
                    "description": "фильтр по коэф. инбриндинга по генотипу ДО",
                    "type": "number",
                    "default": 3.14
                },
                "inseminationDateFrom": {
                    "description": "Фильтр по дате осеменения коровы, ищет коров у которых было осеменение в эту дату или позднее",
                    "type": "string",
                    "example": "1800-01-21"
                },
                "inseminationDateTo": {
                    "description": "Фильтр по дате осеменения коровы, ищет коров у которых было осеменение в эту дату или ранее",
                    "type": "string",
                    "example": "2800-01-21"
                },
                "isAborted": {
                    "description": "Фильтр по абортам Был/ не был",
                    "type": "boolean",
                    "default": false
                },
                "isDead": {
                    "description": "Фильтр живых/мертвых коров (true - ищет мертвых, false - живых)",
                    "type": "boolean",
                    "default": false
                },
                "isIll": {
                    "description": "??? Не реализован",
                    "type": "boolean",
                    "default": false
                },
                "isStillBorn": {
                    "description": "Фильтр по мертворождению Было/не было",
                    "type": "boolean",
                    "default": false
                },
                "isTwins": {
                    "description": "Фильтр по родам двойняшек Было / не было",
                    "type": "boolean",
                    "default": false
                },
                "monogeneticIllneses": {
                    "description": "ID ген. заболеваний их /api/mongenetic_illnesses",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pageNumber": {
                    "description": "Номер страницы для отображения",
                    "type": "integer",
                    "default": 1
                },
                "searchQuery": {
                    "description": "Имя, номер РСХН или инвентарный номер, по которым ищется корова",
                    "type": "string",
                    "example": "Буренка"
                },
                "sex": {
                    "description": "ID пола коровы (если нужно несколько разных полов - несколько ID)",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.Breed": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID породы",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Название породы",
                    "type": "string",
                    "example": "Какая-нибудь порода"
                }
            }
        },
        "models.CheckMilk": {
            "type": "object",
            "properties": {
                "checkDate": {
                    "description": "Дата конрольной дойки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "dryMatter": {
                    "description": "сухой материал",
                    "type": "number"
                },
                "fat": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во жира в молоке",
                    "type": "number",
                    "example": 1
                },
                "id": {
                    "description": "ID контрольной дойки",
                    "type": "integer",
                    "example": 1
                },
                "lactationId": {
                    "description": "ID лактации для которой выполнена контрольная дойка",
                    "type": "integer",
                    "example": 1
                },
                "milk": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во молока",
                    "type": "number",
                    "example": 1
                },
                "probeNumber": {
                    "description": "номер пробы",
                    "type": "integer"
                },
                "protein": {
                    "description": "Параметр контрольной дойки, как я понимаю кол-во белка в молоке",
                    "type": "number",
                    "example": 1
                }
            }
        },
        "models.DailyMilk": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Дата дойки",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "fat": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "fatEvening": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "fatMorning": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "fatNoon": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lactationId": {
                    "description": "ID лактации во время котороый была дойка ` + "`" + `example:\"1\"` + "`" + `",
                    "type": "integer"
                },
                "milk": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "milkEvening": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "milkMorning": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "milkNoon": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "protein": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "proteinEvening": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "proteinMorning": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                },
                "proteinNoon": {
                    "description": "Параметр дойки ` + "`" + `example:\"12\"` + "`" + `",
                    "type": "integer"
                }
            }
        },
        "models.DateOnly": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "models.Exterior": {
            "type": "object",
            "properties": {
                "bodyDepth": {
                    "type": "number"
                },
                "bodyStructure": {
                    "type": "number"
                },
                "boneQHockJointRear": {
                    "type": "number"
                },
                "centerLigamentDepth": {
                    "type": "number"
                },
                "chestWidth": {
                    "type": "number"
                },
                "conditioning": {
                    "type": "number"
                },
                "cowID": {
                    "type": "integer"
                },
                "exteriorType": {
                    "type": "number"
                },
                "foreLegPosFront": {
                    "type": "number"
                },
                "foreTeatDiameter": {
                    "type": "number"
                },
                "foreTeatLendth": {
                    "type": "number"
                },
                "foreUdderAttach": {
                    "type": "number"
                },
                "foreUdderPlcRear": {
                    "type": "number"
                },
                "harmonyOfMovement": {
                    "type": "number"
                },
                "heightOfUdderAttach": {
                    "type": "number"
                },
                "hindLegPosRead": {
                    "type": "number"
                },
                "hindLegPosSide": {
                    "type": "number"
                },
                "hindTeatPlc": {
                    "type": "number"
                },
                "hoofAngle": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "limbs": {
                    "type": "number"
                },
                "milkStrength": {
                    "type": "number"
                },
                "pelvicWidth": {
                    "type": "number"
                },
                "prominenceOfMilkVeins": {
                    "type": "number"
                },
                "rating": {
                    "type": "number"
                },
                "rearTeatDiameter": {
                    "type": "number"
                },
                "rearTeatLength": {
                    "type": "number"
                },
                "sacrumAngle": {
                    "type": "number"
                },
                "sacrumHeight": {
                    "type": "number"
                },
                "topLine": {
                    "type": "number"
                },
                "udder": {
                    "type": "number"
                },
                "udderBalance": {
                    "type": "number"
                },
                "udderDepth": {
                    "type": "number"
                }
            }
        },
        "models.Farm": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cowsCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "districtId": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "inn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nameShort": {
                    "type": "string"
                },
                "parrentId": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "models.Genetic": {
            "type": "object",
            "properties": {
                "bloodDate": {
                    "description": "Дата взятия пробы крови",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "cowID": {
                    "description": "ID коровы",
                    "type": "integer"
                },
                "geneticIllnesses": {
                    "description": "Список генетических заболеваний, пустой если нет",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GeneticIllness"
                    }
                },
                "id": {
                    "description": "ID записи о генотипировании",
                    "type": "integer"
                },
                "inbrindingCoeffByGenotype": {
                    "description": "Коэф. инбриндинга по генотипу",
                    "type": "number"
                },
                "probeNumber": {
                    "description": "Номер пробы",
                    "type": "string"
                },
                "resultDate": {
                    "description": "Дата получения  результата",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                }
            }
        },
        "models.GeneticIllness": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "описание генетического заболевания",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "имя генетического заболевания",
                    "type": "string"
                },
                "omia": {
                    "description": "Какой-то там ОМИЯ номер",
                    "type": "string"
                }
            }
        },
        "models.Lactation": {
            "type": "object",
            "properties": {
                "abort": {
                    "type": "boolean"
                },
                "calvingCount": {
                    "type": "integer"
                },
                "calvingDate": {
                    "$ref": "#/definitions/models.DateOnly"
                },
                "cowId": {
                    "type": "integer"
                },
                "date": {
                    "description": "дата начала лактации",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DateOnly"
                        }
                    ]
                },
                "days": {
                    "description": "количество дней, когда корова дает молоко",
                    "type": "integer"
                },
                "fat305": {
                    "type": "integer"
                },
                "fatAll": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "insemenationDate": {
                    "$ref": "#/definitions/models.DateOnly"
                },
                "insemenationNum": {
                    "type": "integer"
                },
                "milk305": {
                    "type": "integer"
                },
                "milkAll": {
                    "type": "integer"
                },
                "number": {
                    "description": "номер лактации",
                    "type": "integer"
                },
                "protein305": {
                    "type": "integer"
                },
                "proteinAll": {
                    "type": "integer"
                }
            }
        },
        "models.Region": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "default": 1
                },
                "name": {
                    "type": "string",
                    "example": "Усть-Каменский"
                }
            }
        },
        "models.Sex": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "genmilk.ru",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "GenMilk API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
